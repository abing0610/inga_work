<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    	
	  <context:annotation-config />
	  <context:component-scan base-package="com.inga" />
	  <!-- <tx:annotation-driven transaction-manager="txManager"/> -->
	  
	  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		  <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		  <property name="url" value="jdbc:oracle:thin:@localhost:1521:abing"/>
		  <property name="username" value="inga"/>
		  <property name="password" value="inga"/>
	  </bean>
	  
	  <bean name="logInterceptor" class="com.inga.aop.LogInterceptor"></bean>
	  
	  <aop:config>
	  
	  	<aop:pointcut id="txMethod" expression="execution(* com.inga..*.*(..))" /> 
	  	
	  	<aop:advisor pointcut-ref="txMethod" advice-ref="transactionAdvice" />

	  </aop:config>
	  
	<!--   <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		  <constructor-arg index="0" ref="sqlSessionFactory" />
	  </bean> -->
	
	  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		  <property name="dataSource" ref="dataSource" />
		  <property name="configLocation" value="sqlMapConfig.xml"></property>
		  <!-- <property name="mapperLocations" value="classpath*:sample/config/mappers/**/*.xml" /> -->
	  </bean> 
	  
	  
	  <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource"/>
	  </bean>
	  
	  <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
	    <tx:attributes>  
	      <tx:method name="del*" propagation="REQUIRED" />  
	      <tx:method name="save*" propagation="REQUIRED" />
	      <tx:method name="add*" propagation="REQUIRED" />  
	      <tx:method name="update*" propagation="REQUIRED" />  
	      <tx:method name="find*" read-only="true" />  
	      <tx:method name="query*" read-only="true" />  
	      <tx:method name="get*" read-only="true" />  
	      <tx:method name="select*" read-only="true" />  
	    </tx:attributes>  
	  </tx:advice>  
	  
	  <!-- 配置事务管理 -->
<!-- 	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  
  <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
    <tx:attributes>  
      <tx:method name="delete*" propagation="REQUIRED" />  
      <tx:method name="save*" propagation="REQUIRED" />  
      <tx:method name="update*" propagation="REQUIRED" />  
      <tx:method name="find*" read-only="true" />
      <tx:method name="query*" read-only="true" />  
      <tx:method name="get*" read-only="true" />  
      <tx:method name="select*" read-only="true" />  
    </tx:attributes>  
  </tx:advice> 
	   -->
	  
	  
	  <!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        注意：我用的是Annotation的方式配置的Hibernate，这里的property的name是annotatedClasses  
        <property name="packagesToScan">  
            <list>  
                <value>com.inga.entity</value>
            </list>  
        </property>  
        <property name="hibernateProperties">  
            <props>  
                设置Hibernate方言  
                <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>  
                是否打印sql  
                <prop key="hibernate.show_sql">true</prop>  
                格式化sql  
                <prop key="hibernate.format_sql">true</prop>  
            </props>  
        </property>  
    </bean>   -->
    
    <!-- <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean> -->
    
    
	
	 <!--  <tx:advice id="txAdvice" transaction-manager="txManager">  
        <tx:attributes>  
            <tx:method name="save*" propagation="REQUIRED" /> 支持当前事务，如果执行到save开头的任何方法时没有事务则开启一个事务 这是最常见的方式  
            <tx:method name="update*" propagation="REQUIRED" />支持当前事务，如果执行到save开头的任何方法时没有事务则开启一个事务 这是最常见的方式  
            <tx:method name="add*" propagation="REQUIRED" />支持当前事务，如果执行到save开头的任何方法时没有事务则开启一个事务 这是最常见的方式  
            <tx:method name="delete*" propagation="REQUIRED" />支持当前事务，如果执行到save开头的任何方法时没有事务则开启一个事务 这是最常见的方式  
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/> 支持当前事务，如果当前没有事务，就以非事务方式执行。只读  
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>支持当前事务，如果当前没有事务，就以非事务方式执行。只读  
            <tx:method name="*" />  
        </tx:attributes>  
    </tx:advice>  -->
	
	<!-- <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean> -->

</beans>